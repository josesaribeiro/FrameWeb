package ${package.Name};

@Controller
public class ${class.Name} #if(!$generalizations.isEmpty())extends ${generalizations.get(0).Name} #end{

#foreach($attribute in $attributes)
	${attribute.Visibility.Name} ${attribute.Type.Name} ${attribute.Name};
#end

#foreach($association in $associations)
#* *##foreach($member in $association.MemberEnds)
#*      *##if($member.Name == "Target" && $member.Type.Name != $class.Name)
	private ${member.Type.Name} ${STRING.uncapitalize($member.Type.Name)};${NEWLINE}
#*      *##end
#* *##end
#end

	public ${class.Name}() {
		super();
	}

#foreach($attribute in $attributes)
	public ${attribute.Type.Name} get${STRING.capitalize($attribute.Name)}() {
		return ${attribute.Name};
	}

	public void set${STRING.capitalize($attribute.Name)}(${attribute.Type.Name} ${attribute.Name}) {
		this.${attribute.Name} = ${attribute.Name};
	}
#end

#foreach($method in $methods)
#* *##if($method.isAbstract())
	${method.Visibility.Name} abstract ${method.MethodType.Name}} ${method.Name};
#* *##else
	${method.Visibility.Name} ${method.MethodType.Name} ${method.Name}() {
#*      *##if($method.MethodType.Name.equals("void"))
		return;
#*		*##else
		return null;
#*	    *##end
	}
#* *##end
#end
}